# Default values for app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  containerPort: 80
  args: []
  # Overrides the image tag whose default is the chart appVersion.
  tag: "stable"

healthCheck:
  enabled: true
  # Can be any of: http, file, tcp
  healthCheckType: http
  # if healthCheckType is file, it is highly recommended to use file path '/tmp/ready'
  healthCheckPath: /
  # if healthCheckType is file, it is highly recommended to set initialDelaySeconds to 5
  initialDelaySeconds: 0
  timeoutSeconds: 1
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 3

# Can be RollingUpdate or Recreate. Recreate is faster but causes a momentary outage.
deploymentStrategy: RollingUpdate

# Only used if deploymentStrategy is RollingUpdate
maxUnavailable: 25%
maxSurge: 25%

podDisruptionBudget:
  enabled: false
  # minAvailable: 1
  # maxUnavailable: 1

additionalPorts:
  {}
  # - name: extra1
  #   containerPort: 8081
  #   protocol: TCP
  # - name: extra2
  #   containerPort: 9000
  #   protocol: UDP

secrets:
  enabled: false
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/resource-policy": delete
  secretStoreRef:
    name: aws-secret-store
    kind: ClusterSecretStore
  refreshInterval: 120h
  secretsDir: /etc/secrets
  toEnv: []
  # - secret: secret-name
  #   env: ENV_VAR_NAME
  toFiles: []
  # - name: secret-name
  toEnvironments: []
  # - name: secret-name

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

sessionAffinity:
  enabled: false

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Old autoscaling using KEDA (requires KEDA to be installed in the cluster)
autoscaling:
  # interval in seconds to poll for metrics
  pollingInterval: 30
  # cooldown period in seconds
  cooldownPeriod: 300
  # minReplicaCount is the lower limit for the number of replicas that can be set by the autoscaler
  minReplicaCount: 1
  # maxReplicaCount is the upper limit for the number of replicas that can be set by the autoscaler
  maxReplicaCount: 10
  sqs:
    enabled: false
    # queueURL is the URL of the SQS queue (required)
    queueURL: ""
    # queueLength is the length of the queue that triggers scaling (required)
    queueLength: "5"
    # awsRegion is the AWS region of the SQS queue (required)
    awsRegion: ""
  http:
    enabled: false
    hosts: []
  memory:
    enabled: false
    percentage: "80"
    # Allowed types are 'Utilization' or 'AverageValue'
    metricType: "Utilization"
  cpu:
    enabled: false
    percentage: "50"
    # Allowed types are 'Utilization' or 'AverageValue'
    metricType: "Utilization"
  redis:
    enabled: false
    address: ""  # Required host:port format, e.g., redis-service.redis-namespace:6379
    listName: ""        # Required
    listLength: "1"     # Required
    databaseIndex: "0"  # Optional

# Autoscaling using KEDA (requires KEDA to be installed in the cluster)
autoscalingKeda:
  # Enable or disable the entire Keda autoscaling feature
  enabled: false
  # interval in seconds to poll for metrics
  pollingInterval: 30
  # cooldown period in number of seconds to wait before scaling down to zero after the last trigger event
  cooldownPeriod: 300
  # stabilizationWindowSeconds is the number of seconds to stabilize the metric before scaling to the desired number of replicas (other than zero)
  stabilizationWindowSeconds: 300
  # minReplicaCount is the lower limit for the number of replicas that can be set by the autoscaler
  minReplicaCount: 1
  # maxReplicaCount is the upper limit for the number of replicas that can be set by the autoscaler
  maxReplicaCount: 10
  # Array of trigger configurations
  # Note: Individual triggers are enabled by default only when added
  # To disable a specific trigger, set its 'enabled' flag to false
  # Note: Default values are provided for each trigger type
  triggers:
    []
    # - type: cpu
    #   metricType: "Utilization"
    #   percentage: "50"
    # - type: memory
    #   metricType: "Utilization"
    #   percentage: "80"
    # - type: sqs
    #   # queueURL is the URL of the SQS queue (required)
    #   queueURL: ""
    #   # queueLength is the length of the queue that triggers scaling (required)
    #   queueLength: "5"
    #   # awsRegion is the AWS region of the SQS queue (required)
    #   awsRegion: ""
    # - type: http
    #   hosts: []
    # - type: redis
    #   address: "" # Required host:port format #redis-service.redis-namespace:6379
    #   listName: "" # Required
    #   listLength: "1" # Required
    #   databaseIndex: "0" # optional
    # - type: cron
    #   timezone: "UTC" # https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
    #   start: "0 8 * * *" # 8:00 UTC
    #   end: "0 20 * * *" # 20:00 UTC
    #   # If you want to scale you deployment to 0 outside office hours / working hours, you need to set minReplicaCount: 0
    #   desiredReplicas: "10" # Minimum number of replicas to scale to during the cron job

nodeSelector: {}

tolerations: []

affinity: {}
# To use node affinity, add the following lines and specify your affinity rules:
# affinity:
#   nodeAffinity:
#     requiredDuringSchedulingIgnoredDuringExecution:
#       nodeSelectorTerms:
#         - matchExpressions:
#             - key: labelName
#               operator: In
#               values:
#                 - labelName1
#                 - labelName2

env: {}

serviceMonitor:
  enabled: false
  interval: 30s
  metricsPort: 9111

configmaps:
  enabled: false
  names: []

initContainer:
  enabled: false
  image:
    repository: nginx
    pullPolicy: IfNotPresent
    containerPort: 80
    args: []
    # Overrides the image tag whose default is the chart appVersion.
    tag: "stable"
  healthCheck:
    enabled: true
    healthCheckPath: /
    initialDelaySeconds: 0
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

  env: {}

  configmaps:
    enabled: false
    names: []
